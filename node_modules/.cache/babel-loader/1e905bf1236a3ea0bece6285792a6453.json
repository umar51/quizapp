{"ast":null,"code":"//const webpush = require('web-push');\nexport const swDev = () => {\n  // //generating decoded app server key \n  // function determineAppServerKey() {\n  //         var vapidKey = webpush.generateVAPIDKeys();\n  //         var vapidPublicKey = vapidKey.publicKey;\n  //         return urlBase64ToUint8Array(vapidPublicKey)\n  //     }\n  // //push message decoding and encoding\n  // function urlBase64ToUint8Array(base64String) {\n  //         const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  //         const base64 = (base64String + padding)\n  //         .replace(/-/g, '+')\n  //         .replace(/_/g, '/');\n  //         const rawData = window.atob(base64);\n  //         const outputArray = new Uint8Array(rawData.length);\n  //         for (let i = 0; i < rawData.length; ++i) {\n  //         outputArray[i] = rawData.charCodeAt(i);\n  //         }\n  //         return outputArray;\n  //    }\n  let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n  navigator.serviceWorker.register(swUrl).then(response => {\n    console.log(\"sw registered\"); // //subcribed for enabling push messaging\n    // return response.pushManager.subscribe({\n    //     userVisibleOnly: true,\n    //     applicationServerKey: determineAppServerKey()\n    // })\n  });\n};","map":{"version":3,"sources":["/home/umar/To be backuped/bootcampwithmamoon/bootcamp/quizapp-react-typescript/src/swDev.js"],"names":["swDev","swUrl","process","env","PUBLIC_URL","navigator","serviceWorker","register","then","response","console","log"],"mappings":"AAGA;AACA,OAAO,MAAMA,KAAK,GAAG,MAAM;AAGvB;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAMA,MAAIC,KAAK,GAAI,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,QAAtC;AACAC,EAAAA,SAAS,CAACC,aAAV,CAAwBC,QAAxB,CAAiCN,KAAjC,EAAwCO,IAAxC,CAA8CC,QAAD,IAAa;AACtDC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADsD,CAGtD;AACA;AACA;AACA;AACA;AAEH,GATD;AAUH,CA9CM","sourcesContent":["\n\n\n//const webpush = require('web-push');\nexport const swDev = () => {\n  \n\n    // //generating decoded app server key \n    // function determineAppServerKey() {\n    //         var vapidKey = webpush.generateVAPIDKeys();\n    //         var vapidPublicKey = vapidKey.publicKey;\n            \n            \n          \n    //         return urlBase64ToUint8Array(vapidPublicKey)\n    //     }\n       \n    \n\n    // //push message decoding and encoding\n    // function urlBase64ToUint8Array(base64String) {\n    //         const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    //         const base64 = (base64String + padding)\n    //         .replace(/-/g, '+')\n    //         .replace(/_/g, '/');\n        \n    //         const rawData = window.atob(base64);\n    //         const outputArray = new Uint8Array(rawData.length);\n        \n    //         for (let i = 0; i < rawData.length; ++i) {\n    //         outputArray[i] = rawData.charCodeAt(i);\n    //         }\n    //         return outputArray;\n    //    }\n\n\n\n\n\n    let swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n    navigator.serviceWorker.register(swUrl).then((response)=> {\n        console.log(\"sw registered\")\n\n        // //subcribed for enabling push messaging\n        // return response.pushManager.subscribe({\n        //     userVisibleOnly: true,\n        //     applicationServerKey: determineAppServerKey()\n        // })\n    \n    })\n}\n"]},"metadata":{},"sourceType":"module"}