{"ast":null,"code":"import { shuffleArray } from './utiles';\n//this type is for addingall answers correct and incorrect into one array for mapping purpose\nexport let Difficulty;\n\n(function (Difficulty) {\n  Difficulty[\"HARD\"] = \"hard\";\n  Difficulty[\"MEDIUM\"] = \"medium\";\n  Difficulty[\"EASY\"] = \"easy\";\n})(Difficulty || (Difficulty = {}));\n\nexport const fetchQuizQuestions = async (amount, difficulty) => {\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}`;\n  const data = await (await fetch(endpoint)).json();\n  console.log([data.results[0].correct_answer, ...data.results[0].incorrect_answers]); // console.log(shuffleArray([data.results[0].correct_answer, ...data.results[0].incorrect_answers ]))\n\n  console.log([data.results[0].correct_answer, ...data.results[0].incorrect_answers].sort(() => Math.random() - 1.5));\n  return data.results.map(question => ({ ...question,\n    answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n  }));\n};","map":{"version":3,"sources":["/home/umar/To be backuped/bootcampwithmamoon/bootcamp/quizapp-react-typescript/src/API.ts"],"names":["shuffleArray","Difficulty","fetchQuizQuestions","amount","difficulty","endpoint","data","fetch","json","console","log","results","correct_answer","incorrect_answers","sort","Math","random","map","question","answers"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,UAA3B;AAW6D;AAE7D,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAOX,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,MAAP,EAAuBC,UAAvB,KAAmD;AACjF,QAAMC,QAAQ,GAAI,sCAAqCF,MAAO,eAAcC,UAAW,EAAvF;AACA,QAAME,IAAI,GAAG,MAAK,CAAC,MAAMC,KAAK,CAACF,QAAD,CAAZ,EAAwBG,IAAxB,EAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,cAAjB,EAAiC,GAAGN,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBE,iBAApD,CAAZ,EAHiF,CAIlF;;AACCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACJ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,cAAjB,EAAiC,GAAGN,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBE,iBAApD,EAAwEC,IAAxE,CAA6E,MAAKC,IAAI,CAACC,MAAL,KAAgB,GAAlG,CAAZ;AAEA,SAAOV,IAAI,CAACK,OAAL,CAAaM,GAAb,CAAkBC,QAAD,KAAwB,EACxC,GAAGA,QADqC;AAExCC,IAAAA,OAAO,EAAEnB,YAAY,CAAC,CAClB,GAAGkB,QAAQ,CAACL,iBADM,EAEjBK,QAAQ,CAACN,cAFQ,CAAD;AAFmB,GAAxB,CAAjB,CAAP;AAWH,CAlBM","sourcesContent":["import {shuffleArray} from './utiles';\n\nexport type Question = {\n    category : string;\n    correct_answer: string;\n    difficulty: string;\n    incorrect_answers : string[];\n    question: string;\n    type: string;\n}\n\nexport type QuestionState = Question & {answers : string[]}; //this type is for addingall answers correct and incorrect into one array for mapping purpose\n\nexport enum Difficulty {\n    HARD = 'hard',\n    MEDIUM = 'medium',\n    EASY= 'easy'\n}\n\n\n export const fetchQuizQuestions = async (amount: number, difficulty: Difficulty ) => {\n     const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}`;\n     const data = await(await fetch(endpoint)).json();\n     console.log([data.results[0].correct_answer, ...data.results[0].incorrect_answers ])\n    // console.log(shuffleArray([data.results[0].correct_answer, ...data.results[0].incorrect_answers ]))\n     console.log([data.results[0].correct_answer, ...data.results[0].incorrect_answers ].sort(()=> Math.random() - 1.5))\n\n     return data.results.map((question:Question) => ({\n             ...question,\n             answers: shuffleArray([\n                 ...question.incorrect_answers,\n                  question.correct_answer\n                ]),\n                \n         }\n         )\n         );\n    \n };\n\n\n"]},"metadata":{},"sourceType":"module"}